from flask import Flask, request, render_template, redirect, url_for
import mysql.connector

app = Flask(__name__)

# ✅ Connect to MySQL
con = mysql.connector.connect(
    host="localhost",
    user="root",
    password="worKbench25@",
    database="result"
)
cursor = con.cursor()
print("✅ Connected:", con.is_connected())


# ========== ROUTES ==========

@app.route('/')
def home():
    return redirect(url_for('index'))

@app.route('/index')
def index():
    return render_template('index.html')

@app.route('/add_customer')
def add_customer():
    return render_template('add_customer.html')

@app.route('/submit', methods=['POST'])
def input():
    c_name = request.form['customername']
    gst_no = request.form['gst']
    city = request.form['City']
    last_reading = request.form['last_reading']

    cursor.execute(
        "INSERT INTO customer_det (c_name, gst_no, city, last_reading) VALUES (%s, %s, %s, %s)",
        (c_name, gst_no, city, last_reading)
    )
    con.commit()
    return redirect(url_for('invoice'))


@app.route('/invoice')
def invoice():
    return render_template('invoice.html')


@app.route('/total', methods=['POST'])
def total():
    invoice_no = request.form['invoice_no']
    date_in = request.form['Date']
    customer_name = request.form['customername']
    rent = request.form['Rent']
    rent_amt = request.form['Rent_Amount']
    free_copy = request.form['Free_Copy']
    rate_per_copy = request.form['Rent_Per_Copy']
    current_read = int(request.form['current_read'])
    tax = request.form['Tax']

    # ✅ Get last reading from customer_det
    cursor.execute("SELECT last_reading FROM customer_det WHERE c_name = %s", (customer_name,))
    last_row = cursor.fetchone()
    last_reading = int(last_row[0]) if last_row else 0

    # ✅ Insert base values only (MySQL auto-generates the rest)
    cursor.execute("""
        INSERT INTO invoice (
            invoice_no, Date_in, c_name_, rent, rent_amt,
            free_copy, rate_per_copy, last_reads, current_read, tax
        )
        VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)
    """, (invoice_no, date_in, customer_name, rent, rent_amt,
          free_copy, rate_per_copy, last_reading, current_read, tax))
    con.commit()

    print("✅ Data saved — calculated fields auto-generated by MySQL.")
    return redirect(url_for('edit_invoice'))




#EDITING CUSTOMER AND INVOICE SECTION #################################################

@app.route('/edit_customer')
def edit_customer():
    click = con.cursor()
    click.execute("SELECT c_id, c_name, gst_no, last_reading FROM customer_det")
    result = click.fetchall()
    return render_template('edit_customer.html', data=result)


@app.route('/edit_invoice')
def edit_invoice():
    click = con.cursor()
    click.execute("SELECT invoice_no, Date_in, c_name_, rent, rent_amt,free_copy, rate_per_copy," \
    " last_reads, current_read,net_read,payable_amt,sub_total, tax,total  FROM invoice")
    result1 = click.fetchall()
    return render_template('edit_invoice.html', data=result1)



if __name__ == '__main__':
    app.run(debug=True)
